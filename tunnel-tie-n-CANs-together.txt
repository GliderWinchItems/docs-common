tunnel-tie-n-CANs-together.txt
=============================================================
Revision -- 
04/07/2024

- 0.0.0.0 instead of localhost removes the need for setting
up a hub-server instance on the "C" machine (i.e. RPi) for
each incoming connection.

=============================================================
General objective--

"N" computers have a CAN gateway giving serial USB input, and
it the objective is connect the CAN streams via ssh.

All but one of the computers are behind NAT & firewalls. The
exception has an open port that the others can ssh in to. 

Any, or all, computers can have a gateway/serial port connected.

Basic procedure--

Call the open port computer, compute "C". Typically, computers
"A" and "B" would want to connect their CAN buses, however, any
(reasonable) number can connect.

1. Start hub-server on the "C" (machine with open port)

- Check if already running (e.g. RPi41-deh)

deh@rpi41-deh:~$ ps aux | grep hub-server
deh      15330  0.0  0.0   7348   568 pts/3    S+   15:40   0:00 grep hub-server
wellsca  29507  1.1  0.0 186648  2528 ?        Sl   11:31   2:54 hub-server 0.0.0.0 32123

It is running: 
0.0.0.0 - accepts connections from all (wi-fi, ethernet, localhost, etc.)
32123 - listening port

If it is NOT running
sudo nohup hub-server 0.0.0.0 32123 &
- & - runs in background
- nohup - continues running when terminal windows closes

Check that hub-server "works". 
If no one is connected to the hub-server
Type in on one 'nc' and it should appear in the other 'nc'
nc localhost 32123
In another window that was ssh'ed into RPi--
nc localhost 32123

2. Remote machine connections. e.g. "A"

- Open window and set up tunnel, e.g.

deh@deh-Q400A:~$ ssh -L 32123:0.0.0.0:32123 47.204.211.51 -p 41571
Which returns something like the following--
Linux rpi41-deh 5.10.17-v7l+ #1421 SMP Thu May 27 14:00:13 BST 2021 armv7l
...
deh@rpi41-deh:~$ 

Note: first 32123 in the above is the "local" port. The second 32123 is the port
on the hub-server in the RPi.

The IP address (47.204.211.51) is for the RPi, and -p (port) (41571) is for the RPi41-deh.
RPi zero w (41575), RPi 3 (41572), and FIT (41574), might be available.

- Connect machine to forwarded port several methods available--
Open a window--
  socat TCP4:localhost:32123,nodelay FILE:/dev/ttyUSB0,b2000000,raw,echo=0,crtscts=0 &
Where,
 32123 is the forwarded port number 
 /dev/ttyUSB0 is the serial/CAN gateway
 2000000 is the serial baud rate (DON'T FORGET THE 'b')

 The command might need 'sudo' for the serial port.
 The '&' means it runs in background so window can be used;
 
 - Monitoring the CAN msgs is done the usual way, e.g.--
 nc localhost 32123
 Or,
 cangateBMS 127.0.0.1 32123
 
 - ssh into into the RPi and the same CAN msg stream can be seen.
 
 - Repeat 2. for each machine.
 Each machine will add any CAN msgs that it originates, and receive the merging of all the others.
 
 3. NOTES:
 
-  A machine without a serial/CAN gateway can participate with CAN msgs generated by
 cangateBMS, or other routines.
 
 - If a local machine has hub-server running locally, e.g. it is started with--
   hub-socat_b 32123, /dev/ttyUSB0, 2000000 & 
   
 And, it is desired to connect to a merged CAN msg stream, the port forwarding
 connection port needs to be different, e.g. 32111 instead of 32123
   ssh -L 32111:localhost:32123 47.204.211.51 -p 41571

 To connect the hub-server that has been running and listens on 32123, use
 socat to connect it to the forwarded port.
   socat tcp:32123:localhost tcp:32124:localhost &
 Or, leave out the '&' and when ctlC to kill the command will break the connection. 
 
=============================================================
04/05/2024
The following "works" but is more complicated than necessary
=============================================================

General objective--

"N" computers have a CAN gateway giving serial USB input, and
it the objective is connect the CAN streams via ssh.

All but one of the computers are behind NAT & firewalls. The
exception has an open port that the others can ssh in to. 

Any, or all, computers can have a gateway/serial port connected.

Basic procedure--

Call the open port computer, compute "C". Typically, computers
"A" and "B" would want to connect their CAN buses, however, any
(reasonable) number can connect.

1. Setup of C: Start hub-server
- A, B, or other, sshs into C:
  ssh deh@47.204.211.51 -p 41571
Which gives RPi41-deh prompt

- hub-server is setup
  If gateway/serial port connected:
    hub-socat_b 32123 /dev/ttyUSB0 2000000
  [assumes ttyUSB0 is the correct serial port]

  If gateway has no gateway/serial port:
    hub-server localhost 32123 &

  This leaves a hub-server running on C with listening port
  32123.

  exit

2. Each computer that will connect with serial port starts local hub-server
   hub-socat_b 32123 /dev/ttyUSB0 2000000

   Status: All computers have a local hub-server started, and some
   have the gateway/serial port connected. 

   If the listening port is 32123 helps avoid confusion.

   Each can check if the gateway is running with--
     nc localhost 32123

3. Connect first computer A, B, or other, to C.

- Open terminal for Port forwarding, e.g.
   ssh -L 22228:localhost:32123 47.204.211.51 -p 41571
Which should end with a RPi41-deh prompt

Leave this terminal open

- Start a local connection, e.g.
    hub-server localhost 32128 localhost localhost 22228 localhost 32123 &
 Listen  on 32128: (e.g. nc localhost 32128 to show stream)
 Connect to 32123: (gateway/serial) if that was set up.
 Connect to 22228: port being forewared to C.

 4. Additional connections to C (for some reason?) need their hub-server on C	

- Open a "tandem" hub-server on C that this computer will connect with
  ssh into C, e.g.
	 ssh deh@47.204.211.51 -p 41571
Which gives RPi41-deh prompt
  Setup hub-server for this computer, e.g.
     hub-server localhost 32126 localhost 32123 &
  This connects this hub-server instance to the hub-server that "hubs" everybody.

  At this point is the same procedure as above, but with a few different port
  numbers.

- Open terminal for Port forwarding, e.g.
   ssh -L 22221:localhost:32126 47.204.211.51 -p 41571
Which should end with a RPi41-deh prompt
Note: 32126 matches the hub-server on RPi41-deh set up for this connection.
Note: 22221 is a unique number in C.

Leave this terminal open 

- Open a terminal and start a local connection, e.g.
    hub-server localhost 32126 localhost localhost 22221 localhost 32123 &
 Listen  on 32128: (e.g. nc localhost 32128 to show stream)
 Connect to 32123: (gateway/serial) if that was set up.
 Connect to 22221: port being forewared to C.

At this point 'nc localhost <port>' on A, B, or C will show the combined CAN
msgs.






