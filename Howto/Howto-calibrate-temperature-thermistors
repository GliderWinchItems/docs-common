Howto-calibrate-temperature-thermistors
07/06/2024

Provisiton for three thermistors on BMS board

Thermcal idx
|  GPIO
|  |  Header JPx
|  |  |  BMSAUX-THERM index
|  |  |  |  cangateBMS header name
|  |  |  |  |  
0  2  3  1  Texit
1  3  4  2  Tamb
2  4  5  3  TCell

Tamb  is header closest to battery side edge of PCB
      and inlet air temp

Tcell is in middle header and middle of pack cell

Texit is provision (not installed) for exit air



1. cangateBMS terminal to poll

e.g. computer wifi on local network 192.168.2.xxx
This opens to Raspberry Pi4 with CAN hat
cangateBMS 192.168.2.100 32124

Check BMS CAN id and Polling CAN id
'e'
E.g. (07/06/2024 defaults )
BMS  B0A00000 (default BMS unit)
Poll AEC00000 (default PC polls battery string 1)

Set CAN id for => single <= unit of interest
'ew B0E00000'
Or, select => ALL <= units (CAN id = 0)
'ew 00000000'

Check duration between poll msgs
'e'

Set poll duration (zero = no poll), e.g. every second
'ed 1000'

Set command to request rading to unit of interest 
(m = send to unit of interest only, k = set (not read))
'emj' (j = requests)

Menu displays, select specific action
enter '34' for--
34 READ_AUX     // BMS responds with A,B,C,D AUX register readings (12 msgs)

This starts polling for AUX register readings

2. open another cangateBMS terminal for display msgs

'a' command displays default CAN id

Set unit CAN id, e.g.--
'aw B0E00000' 

Set display
'aq'

Enter '34' from menu
34 READ_AUX     // BMS responds with A,B,C,D AUX register readings (12 msgs)

Example of display--

MISCQ code: 34: menu line:  34 READ_AUX     // BMS responds with A,B,C,D AUX register readings (12 msgs)
	TYPE2 msg code: 34 for CANIDs B0A00000
Display AUX registers

   HALL THERM1 THERM2 THERM3 5V REG 3V REF CUR SNS   U$7    U$3    U$2 
      1      2      3      4      5    REF      6      7      8      9  RCVD  OV|UV|RDVD1
      0  18769  19651  23064  49826  30013  27560      0      0      0  65535   0xFAAA
      0  18768  19651  23064  49826  30013  27560      0      0      0  65535   0xFAAA
      0  18766  19651  23064  49826  30013  27560      0      0      0  65535   0xFAAA

3. The column CUR SNS (current sense) shows the ADBMS1818 auxiliary ADC reading, e.g. 27560

If the current is zero this is the ADC w op-amp offset.

The current will not be zero if--
  a) On-board low current charger is running.
  b) External charging or loads on the battery string.
  c) DUMP, DUMP2, HEATER fets are ON and adding a load.

4. Update the parameter file for this unit

cd ~/GliderWinchItems/BMS/adbms1818/params
E.g. with editor open the 'bq' file, e.g.
B0E00000-bq_idx_v_struct.c

In the vicinity of line 296 find the calibration settings,
for offset, scale, scale^2 e.g.--

   /* Auxilarly GPIO 6 Current sense op amp */
   p->bmsaux[BMSAUX_6_CUR_SENSE].coef[0] = 30803.0f;
   p->bmsaux[BMSAUX_6_CUR_SENSE].coef[1] = 9.90747E-2f;
   p->bmsaux[BMSAUX_6_CUR_SENSE].coef[2] = 0;
